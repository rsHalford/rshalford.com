---
import { getCollection } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";
import Post from "@components/Post.astro";
import Profile from "@components/Profile.astro";

export async function getStaticPaths() {
  const blogEntries = (
    await getCollection("blog", ({ data }) => {
      return data.draft !== true;
    })
  ).sort((a, b) => Date.parse(b.data.pubDate) - Date.parse(a.data.pubDate));

  const uniqueTags = [
    ...new Set(blogEntries.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredEntries = blogEntries.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredEntries },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const title = "Richard Halford's blog";
const url = "https://www.rshalford.com";
const type = "website";
const description = "Richard Halford's blog";
---

<BaseLayout
  title={`#${tag} - ${title}`}
  url={url}
  type={type}
  description={`#${tag} - ${description}`}
>
  <main>
    <section class="blog">
      <h1>#{tag}</h1>
      {
        posts.map((post: any) => (
          <Post
            draft={post.data.draft}
            title={post.data.title}
            description={post.data.description}
            author={post.data.author}
            tags={post.data.tags}
            footnote={post.data.footnote}
            content={post.data.content}
            canonicalURL={`/${post.data.content}/${post.slug}`}
            pubDate={post.data.pubDate}
          />
        ))
      }
    </section>
    <Profile />
  </main>
</BaseLayout>

<style lang="scss">
  main {
    min-height: 100vh;
    max-width: 80ch;
    display: flex;
    flex-direction: row;
    gap: 3rem;
    padding: 0 1rem;
    margin: 0 auto;

    section {
      h1 {
        margin-bottom: 1rem;
      }
    }
  }

  @media screen and (max-width: 636px) {
    main {
      flex-direction: column;
    }
  }
</style>
