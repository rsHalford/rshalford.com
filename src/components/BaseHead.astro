---
interface Props {
  title: string;
  url?: string;
  type?: string;
  description?: string;
}
const { title, url, type, description } = Astro.props;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <link
    rel="apple-touch-icon"
    sizes="57x57"
    href="/favicon/apple-icon-57x57.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="60x60"
    href="/favicon/apple-icon-60x60.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="72x72"
    href="/favicon/apple-icon-72x72.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="76x76"
    href="/favicon/apple-icon-76x76.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="114x114"
    href="/favicon/apple-icon-114x114.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="120x120"
    href="/favicon/apple-icon-120x120.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="144x144"
    href="/favicon/apple-icon-144x144.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="152x152"
    href="/favicon/apple-icon-152x152.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="180x180"
    href="/favicon/apple-icon-180x180.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="192x192"
    href="/favicon/android-icon-192x192.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="32x32"
    href="/favicon/favicon-32x32.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="96x96"
    href="/favicon/favicon-96x96.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="16x16"
    href="/favicon/favicon-16x16.png"
  />
  <link rel="manifest" href="/favicon/manifest.json" />
  <meta name="msapplication-TileColor" content="#ffffff" />
  <meta name="msapplication-TileImage" content="/favicon/ms-icon-144x144.png" />
  <meta name="theme-color" content="#ffffff" />
  <title>{title}</title>
  <meta
    name="keywords"
    content="blog, articles, portfolio, tutorials, information, linux, technology, programming, code"
  />
  <meta name="description" content={description} />
  <meta name="author" content="Richard Halford" />
  <meta property="og:title" content={title} />
  <meta property="og:url" content={url} />
  <meta property="og:type" content={type} />
  <meta property="og:description" content={description} />
  <meta
    property="og:image"
    content="https://www.rshalford.com/graphics/rshalford-1024.png"
  />
  <meta property="og:image:type" content="image/png" />
  <meta property="og:image:height" content="1024" />
  <meta property="og:image:width" content="1024" />
  <meta
    property="og:image"
    content="https://www.rshalford.com/graphics/rshalford-1200x630.png"
  />
  <meta property="og:image:type" content="image/png" />
  <meta property="og:image:height" content="630" />
  <meta property="og:image:width" content="1200" />
  <meta property="og:site_name" content="rshalford" />
  <meta property="og:locale" content="en_GB" />
  <link rel="me" href="https://mastodon.social/@rshalford" />
  {url && <link rel="canonical" href={url} />}

  <script is:inline>
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "dark") {
      document.documentElement.classList.remove("light");
    } else {
      document.documentElement.classList.add("light");
    }

    window.localStorage.setItem("theme", theme);
  </script>
</head>
